package com.revature.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;

import com.revature.models.Employee;
import com.revature.models.Reimbursement;
import com.revature.util.ConnectionFactory;

//Contain the implemented Data Access Methods
public class EmployeeDAOImpl implements EmployeeDAO {

	
	
	@Override
	public Employee getEmployee(int author) {
		// TODO Auto-generated method stub
		return null;
	}
	
	@Override
	public Employee getEmployee(String username, String password) {
		
		//using the username and password that is passed by the user upon logging in construct an employee object
			//will need to connect to the database 
				//select the record that correspond with the login information
					//use that information to pass into the Employee constructor
		Employee user = new Employee();
		try (Connection conn = ConnectionFactory.getInstance().getConnection();) {

			//Construct & execute the corresponding SELECT statement
			String sql = "SELECT * FROM EMPLOYEES WHERE (Username = ? AND pass = ?)";
			
			// prepare the SQL call
			PreparedStatement pstmt = conn.prepareStatement(sql);

			// set the values 
			pstmt.setString(1, username);
			pstmt.setString(2, password);	
			
			ResultSet rs = pstmt.executeQuery();			 
		
			//loop through each row, assigning each table field to is corresponding object field
			while(rs.next()) {
				
				user.setEmployeeID(rs.getInt(1));
				user.setUsername(rs.getString(2));
				user.setPass(rs.getString(3));
				user.setFirst_Name(rs.getString(4));
				user.setLast_Name(rs.getString(5));
				user.set
				user.setUserRoleID((rs.getInt(7));
				
				rec.setReimbID(rs.getInt(1));
				rec.setAmount(rs.getDouble(2));
				rec.setSubmitted(rs.getTimestamp(3));
				rec.setResolved(rs.getTimestamp(4));
				rec.setDescription(rs.getString(5));
				//Receipt(would go here) not included
				rec.setAuthor(rs.getInt(7));
				rec.setResolver(rs.getInt(8));
				rec.setStatusID(rs.getInt(9));
				rec.setTypeID(rs.getInt(10));
				
				//appended populated record to the list of records to be returned
				records.add(rec);
				
		
		
		
		return user; //should return the constructed employee(user) object
	}


}
